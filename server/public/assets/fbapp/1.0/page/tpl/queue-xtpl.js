/*
  Generated by kissy-xtemplate(kissy pie).*/
KISSY.add(function(){
    return function(scopes,option){
var buffer = "",
S = KISSY,escapeHTML = S.escapeHTML,log = S.log,error = S.error,
commands = option.commands,utils = option.utils,cache=option.cache,eachCommand = commands["each"],withCommand = commands["with"],ifCommand = commands["if"],setCommand = commands["set"],includeCommand = commands["include"],getProperty = utils["getProperty"],subTpls = option.subTpls;
buffer += '<ul class="build-queue">\n    ';
var option2 = {commands: commands,utils: utils,cache: cache,subTpls: subTpls};
var params3 = [];
var id4;
var tmp5=getProperty("pages",scopes[0]);
if(tmp5===false){
log("can not find property: 'pages' at line 2", "warn");
id4 = "";
} else {
id4 = tmp5[0];
}
params3.push(id4);
option2.params=params3;
option2.fn=function(scopes) {
var buffer = "";
buffer += '\n    <li class="build-task">';
var id6;
var tmp7=getProperty("this",scopes[0]);
if(tmp7===false){
log("can not find property: 'this' at line 3", "warn");
id6 = "";
} else {
id6 = tmp7[0];
}
buffer+=escapeHTML(id6);
buffer += '</li>\n    ';
return buffer;
};
try{
buffer += eachCommand(scopes,option2);
}catch(e){
error(e.message+": 'each' at line 2");
}
buffer += '\n</ul>';
return buffer;}
});